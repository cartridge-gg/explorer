name: build and push workflow base image

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/Dockerfile"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release_info.outputs.tag_name }}
    steps:
      - name: Set Docker image tag
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c 1-7)
          echo "DOCKER_TAG=$SHORT_SHA" >> $GITHUB_ENV

      - name: Set outputs
        id: release_info
        run: |
          echo "tag_name=${{ env.DOCKER_TAG }}" >> $GITHUB_OUTPUT

  build-and-push:
    needs: setup
    strategy:
      matrix:
        job:
          - os: ubuntu-latest-8-cores
            platform: linux/amd64
            arch: amd64
          - os: ubuntu-latest-8-cores-arm64
            platform: linux/arm64
            arch: arm64

    runs-on: ${{ matrix.job.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for ${{ matrix.job.platform }}
        uses: docker/build-push-action@v2
        with:
          push: true
          file: .github/Dockerfile
          tags: ghcr.io/${{ github.repository }}-runner:${{ needs.setup.outputs.tag_name }}-${{ matrix.job.arch }}
          build-args: |
            RUST_VERSION=1.83.0
            BUILD_TYPE=${{ github.event_name }}
          platforms: ${{ matrix.job.platform }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}-runner:latest

  merge-manifest:
    needs: [setup, build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-platform manifest
        run: |
          # Enable experimental features for manifest command
          mkdir -p ~/.docker
          echo '{"experimental": "enabled"}' > ~/.docker/config.json

          # Create and push versioned tag manifest
          docker manifest create ghcr.io/${{ github.repository }}-runner:${{ needs.setup.outputs.tag_name }} \
            ghcr.io/${{ github.repository }}-runner:${{ needs.setup.outputs.tag_name }}-amd64 \
            ghcr.io/${{ github.repository }}-runner:${{ needs.setup.outputs.tag_name }}-arm64

          docker manifest push ghcr.io/${{ github.repository }}-runner:${{ needs.setup.outputs.tag_name }}

          # Create and push latest tag manifest
          docker manifest create ghcr.io/${{ github.repository }}-runner:latest \
            ghcr.io/${{ github.repository }}-runner:${{ needs.setup.outputs.tag_name }}-amd64 \
            ghcr.io/${{ github.repository }}-runner:${{ needs.setup.outputs.tag_name }}-arm64

          docker manifest push ghcr.io/${{ github.repository }}-runner:latest

          # Clean up temporary tags
          docker rmi ghcr.io/${{ github.repository }}-runner:${{ needs.setup.outputs.tag_name }}-amd64
          docker rmi ghcr.io/${{ github.repository }}-runner:${{ needs.setup.outputs.tag_name }}-arm64
